# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import dummy_pb2 as dummy__pb2


class DummyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TestTrain = channel.unary_unary(
                '/DummyService/TestTrain',
                request_serializer=dummy__pb2.FitIns.SerializeToString,
                response_deserializer=dummy__pb2.FitRes.FromString,
                )
        self.TestEval = channel.unary_unary(
                '/DummyService/TestEval',
                request_serializer=dummy__pb2.EvaluateIns.SerializeToString,
                response_deserializer=dummy__pb2.EvaluateRes.FromString,
                )
        self.Finish = channel.unary_unary(
                '/DummyService/Finish',
                request_serializer=dummy__pb2.FinishIns.SerializeToString,
                response_deserializer=dummy__pb2.FinishRes.FromString,
                )


class DummyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TestTrain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestEval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Finish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DummyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TestTrain': grpc.unary_unary_rpc_method_handler(
                    servicer.TestTrain,
                    request_deserializer=dummy__pb2.FitIns.FromString,
                    response_serializer=dummy__pb2.FitRes.SerializeToString,
            ),
            'TestEval': grpc.unary_unary_rpc_method_handler(
                    servicer.TestEval,
                    request_deserializer=dummy__pb2.EvaluateIns.FromString,
                    response_serializer=dummy__pb2.EvaluateRes.SerializeToString,
            ),
            'Finish': grpc.unary_unary_rpc_method_handler(
                    servicer.Finish,
                    request_deserializer=dummy__pb2.FinishIns.FromString,
                    response_serializer=dummy__pb2.FinishRes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DummyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DummyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TestTrain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DummyService/TestTrain',
            dummy__pb2.FitIns.SerializeToString,
            dummy__pb2.FitRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestEval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DummyService/TestEval',
            dummy__pb2.EvaluateIns.SerializeToString,
            dummy__pb2.EvaluateRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Finish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DummyService/Finish',
            dummy__pb2.FinishIns.SerializeToString,
            dummy__pb2.FinishRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
